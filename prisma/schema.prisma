// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName String
  role String
  department String
  email String @unique
  password String
  tickets Ticket[]
  tokens Token[]
}

model Token {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId Int
  token String
}

model Ticket { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  crf Int @unique
  creator User @relation(fields: [creatorId], references: [id])
  creatorId Int 
  purpose String
  office String
  department String
  actionBy String
  status String
  reimbursements Reimbursement[]
  remarks Remark[]
  images Image[]
  balance Balance?
}

model Reimbursement {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticket Ticket @relation(fields: [ticketId], references: [id])
  ticketId Int
  expenseDate String
  expenseAmount Int 
  expenseNature String
  approved Boolean
}

model Remark {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticket Ticket @relation(fields: [ticketId], references: [id])
  ticketId Int
  type String
  role String
  content String
}

model Image {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticket Ticket @relation (fields: [ticketId], references: [id])
  ticketId Int
  link String
}

model Balance {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticket Ticket @relation (fields: [ticketId], references: [id])
  ticketId Int @unique
  name String
  balance Int
  amount Int
  preparedBy String
}